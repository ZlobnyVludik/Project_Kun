# Описать функцию AddLeftDigit(D, K), добавляющую к целому положительному числу K слева цифру D (D — входной параметр целого типа, лежащий в диапазоне 1-9, K — параметр целого типа, являющийся одновременно входным и выходным). С помощью этой функции последовательно добавить к данному числу K слева данные цифры D1 и D2, выводя результат каждого добавления.

def add_left_digit(d, k):
    # Проверяем корректность входных параметров
    if not isinstance(d, int) or not isinstance(k, int):
        raise ValueError("D и K должны быть целыми числами")
    if d < 1 or d > 9:
        raise ValueError("D должен быть в диапазоне от 1 до 9")
    if k <= 0:
        raise ValueError("K должно быть положительным числом")
    
    # Добавляем цифру D слева к числу K
    result = int(str(d) + str(k))
    return result

def main():
    try:
        # Ввод исходного числа K
        k = int(input("Введите целое положительное число K: "))
        if k <= 0:
            print("Ошибка: K должно быть положительным числом")
            return
        
        # Ввод первой цифры D1
        d1 = int(input("Введите цифру D1 (1-9): "))
        if d1 < 1 or d1 > 9:
            print("Ошибка: D1 должен быть в диапазоне от 1 до 9")
            return
        
        # Добавляем D1 слева к K
        k = add_left_digit(d1, k)
        print(f"После добавления {d1}: {k}")
        
        # Ввод второй цифры D2
        d2 = int(input("Введите цифру D2 (1-9): "))
        if d2 < 1 or d2 > 9:
            print("Ошибка: D2 должен быть в диапазоне от 1 до 9")
            return
        
        # Добавляем D2 слева к K
        k = add_left_digit(d2, k)
        print(f"После добавления {d2}: {k}")
        
    except ValueError as e:
        if "invalid literal" in str(e):
            print("Ошибка: Введите целое число!")
        else:
            print(f"Ошибка: {e}")
    except Exception as e:
        print(f"Произошла непредвиденная ошибка: {e}")

    main()
